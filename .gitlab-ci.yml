# * MIT License

# Copyright (c) 2020 Tim Anthony Manuel

# forked from: https://github.com/AndreySenov/firebase-tools-docker

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

default:
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

stages:
  - build
  - test # WILL BE ADDED SOMETIME
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  VERSION: '7.16.1' # FIREBASE-TOOLS VERSION
  DOCKER_TLS_CERTDIR: '/certs'
  DOCKER_HUB_ORG: thirddegreeapps

# *---------------------------------------------[ TEMPLATE FOR DEV BUILD JOB ]
.build:template: &build_template
  environment: development
  stage: build
  script:
    - docker build . --no-cache --pull -t $IMAGE_TAG
      -f ${FILE_NAME}
      --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      --build-arg CI_JOB_ID=$CI_JOB_ID
      --build-arg CI_PIPELINE_ID=$CI_PIPELINE_ID
      --build-arg VCS_REF=$CI_COMMIT_SHA
      --build-arg VERSION=$VERSION
  after_script:
    - echo Built $IMAGE_TAG
    - echo for docker $DOCKER_HUB_ORG/$CI_PROJECT_NAME:$SUFFIX_TAG
      # TODO: REMOVE THIS LATER
    # PUSH IMAGE TO GITLAB REGISTRY
    - docker push $IMAGE_TAG # TODO: PUT THIS IN A DEPLOY STAGE
  only:
    changes:
      - ${FILE_NAME}
      - .gitlab-ci.yml
  except:
    - /^release+(\/|-).+$/

# *---------------------------------------------------------------[ node lts ]
build_container:lts:buster:
  <<: *build_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:lts-buster-rc-$VERSION
    SUFFIX_TAG: lts-buster-rc-$VERSION
    FILE_NAME: ./node-lts/latest-lts/buster.Dockerfile

build_container:lts:
  <<: *build_template
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:lts-rc-$VERSION
    SUFFIX_TAG: lts-rc-$VERSION
    FILE_NAME: ./node-lts/latest-lts/Dockerfile

# *---------------------------------------------------------------[ node 12 ]
build_container:12:buster:
  <<: *build_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:12-buster-rc-$VERSION
    SUFFIX_TAG: 12-buster-rc-$VERSION
    FILE_NAME: ./node-lts/12/buster.Dockerfile

build_container:12:
  <<: *build_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:12-rc-$VERSION
    SUFFIX_TAG: 12-rc-$VERSION
    FILE_NAME: ./node-lts/12/Dockerfile

# *---------------------------------------------------------------[ node 10 ]
build_container:10:buster:
  <<: *build_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:10-buster-rc-$VERSION
    SUFFIX_TAG: 10-buster-rc-$VERSION
    FILE_NAME: ./node-lts/10/buster.Dockerfile

build_container:10:
  <<: *build_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:10-rc-$VERSION
    SUFFIX_TAG: 10-rc-$VERSION
    FILE_NAME: ./node-lts/10/Dockerfile

# *---------------------------------------------------------------[ node 8 ]
build_container:8:buster:
  <<: *build_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:8-buster-rc-$VERSION
    SUFFIX_TAG: 8-buster-rc-$VERSION
    FILE_NAME: ./node-lts/8/buster.Dockerfile

build_container:8:
  <<: *build_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:8-rc-$VERSION
    SUFFIX_TAG: 8-rc-$VERSION
    FILE_NAME: ./node-lts/8/Dockerfile

# *----------------------------------------------------[ node lts + alpine ]
build_container:alpine:
  <<: *build_template
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:lts-alpine-rc-$VERSION
    SUFFIX_TAG: lts-alpine-rc-$VERSION
  script:
    - docker build . --no-cache --pull -t $IMAGE_TAG
      --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      --build-arg CI_JOB_ID=$CI_JOB_ID
      --build-arg CI_PIPELINE_ID=$CI_PIPELINE_ID
      --build-arg VCS_REF=$CI_COMMIT_SHA
      --build-arg VERSION=$VERSION
  only:
    changes:
      - Dockerfile
      - .gitlab-ci.yml

# *-----------------------------------------[ TEMPLATE FOR RELEASE BUILD JOB ]
.build:release:template: &build_release_template
  environment: release/$VERSION
  stage: deploy
  script:
    - docker build . --no-cache --pull -t $IMAGE_TAG
      -f ${FILE_NAME}
      --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      --build-arg CI_JOB_ID=$CI_JOB_ID
      --build-arg CI_PIPELINE_ID=$CI_PIPELINE_ID
      --build-arg VCS_REF=$CI_COMMIT_SHA
      --build-arg VERSION=$VERSION
  after_script:
    - echo Built $IMAGE_TAG
    # TODO: PUT THIS IN A DEPLOY STAGE
    - docker push $IMAGE_TAG # PUSHES TO GITLAB REGISTRY
    # docker hub
    # RE-TAG FOR DOCKER HUB.
    - docker tag $IMAGE_TAG $DOCKER_HUB_ORG/$CI_PROJECT_NAME:$SUFFIX_TAG
    - docker tag $IMAGE_TAG $DOCKER_HUB_ORG/$CI_PROJECT_NAME:$SUFFIX_TAG-latest
    - docker login -u $DOCKER_USER -p $DOCKER_TOKEN
    - docker push $DOCKER_HUB_ORG/$CI_PROJECT_NAME:$SUFFIX_TAG
    - docker push $DOCKER_HUB_ORG/$CI_PROJECT_NAME:$SUFFIX_TAG-latest
  only:
    refs:
      - /^release+(\/|-).+$/
      - /^production+(\/|-).+$/
    changes:
      - ${FILE_NAME}
      - .gitlab-ci.yml

# *---------------------------------------------------------------[ node lts ]
build_container:release:lts:buster:
  <<: *build_release_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:lts-buster-$VERSION
    SUFFIX_TAG: lts-buster-$VERSION
    FILE_NAME: ./node-lts/latest-lts/buster.Dockerfile

build_container:release:lts:
  <<: *build_release_template
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:lts-$VERSION
    SUFFIX_TAG: lts-$VERSION
    FILE_NAME: ./node-lts/latest-lts/Dockerfile

# *---------------------------------------------------------------[ node 12 ]
build_container:release:12:buster:
  <<: *build_release_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:12-buster-$VERSION
    SUFFIX_TAG: 12-buster-$VERSION
    FILE_NAME: ./node-lts/12/buster.Dockerfile

build_container:release:12:
  <<: *build_release_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:12-$VERSION
    SUFFIX_TAG: 12-$VERSION
    FILE_NAME: ./node-lts/12/Dockerfile

# *---------------------------------------------------------------[ node 10 ]
build_container:release:10:buster:
  <<: *build_release_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:10-buster-$VERSION
    SUFFIX_TAG: 10-buster-$VERSION
    FILE_NAME: ./node-lts/10/buster.Dockerfile

build_container:release:10:
  <<: *build_release_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:10-$VERSION
    SUFFIX_TAG: 10-$VERSION
    FILE_NAME: ./node-lts/10/Dockerfile

# *---------------------------------------------------------------[ node 8 ]
build_container:release:8:buster:
  <<: *build_release_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:8-buster-$VERSION
    SUFFIX_TAG: 8-buster-$VERSION
    FILE_NAME: ./node-lts/8/buster.Dockerfile

build_container:release:8:
  <<: *build_release_template # THE BUILD TEMPLATE
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:8-$VERSION
    SUFFIX_TAG: 8-buster-$VERSION
    FILE_NAME: ./node-lts/8/Dockerfile

# *----------------------------------------------------[ node lts + alpine ]
build_container:release:alpine:
  <<: *build_release_template
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:lts-alpine-$VERSION
  script:
    - docker build . --no-cache --pull -t $IMAGE_TAG
      --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      --build-arg CI_JOB_ID=$CI_JOB_ID
      --build-arg CI_PIPELINE_ID=$CI_PIPELINE_ID
      --build-arg VCS_REF=$CI_COMMIT_SHA
      --build-arg VERSION=$VERSION
  only:
    changes:
      - Dockerfile
      - .gitlab-ci.yml
